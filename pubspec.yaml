name: luckywalk
description: "A new Flutter project."
# The following line prevents the package from being accidentally published to
# pub.dev using `flutter pub publish`. This is preferred for private packages.
publish_to: 'none' # Remove this line if you wish to publish to pub.dev

# The following defines the version and build number for your application.
# A version number is three numbers separated by dots, like 1.2.43
# followed by an optional build number separated by a +.
# Both the version and the builder number may be overridden in flutter
# build by specifying --build-name and --build-number, respectively.
# In Android, build-name is used as versionName while build-number used as versionCode.
# Read more about Android versioning at https://developer.android.com/studio/publish/versioning
# In iOS, build-name is used as CFBundleShortVersionString while build-number is used as CFBundleVersion.
# Read more about iOS versioning at
# https://developer.apple.com/library/archive/documentation/General/Reference/InfoPlistKeyReference/Articles/CoreFoundationKeys.html
# In Windows, build-name is used as the major, minor, and patch parts
# of the product and file versions while build-number is used as the build suffix.
version: 1.0.0+1

environment:
  sdk: ^3.9.2

# Dependencies specify other packages that your package needs in order to work.
# To automatically upgrade your package dependencies to the latest versions
# consider running `flutter pub upgrade --major-versions`. Alternatively,
# dependencies can be manually updated by changing the version numbers below to
# the latest version available on pub.dev. To see which dependencies have newer
# versions available, run `flutter pub outdated`.
dependencies:
  flutter:
    sdk: flutter

  # UI
  cupertino_icons: ^1.0.8
  
  # State Management
  flutter_riverpod: ^2.4.9
  riverpod_annotation: ^2.3.3
  
  # Navigation
  go_router: ^12.1.3
  
  # Backend
  supabase_flutter: ^2.0.0
  
  # Local Storage
  shared_preferences: ^2.2.2
  
  # HTTP & Networking
  dio: ^5.4.0
  
  # JSON Serialization
  json_annotation: ^4.8.1
  freezed_annotation: ^2.4.1
  
  # Date & Time
  intl: ^0.19.0
  
  # Permissions
  permission_handler: ^11.1.0
  
  # Health & Fitness
  health: ^10.1.0
  pedometer: ^4.1.1
  
  # Ads (현재 Mock 사용으로 주석 처리)
  # google_mobile_ads: ^4.0.0
  
  # Push Notifications (현재 Mock 사용으로 주석 처리)
  # firebase_core: ^2.24.2
  # firebase_messaging: ^14.7.10
  
  # Image Picker
  image_picker: ^1.0.4
  
  # Device Info
  device_info_plus: ^9.1.1
  
  # Crypto
  crypto: ^3.0.3
  
  # Logging
  logger: ^2.0.2+1
  
  # URL Launcher
  url_launcher: ^6.2.2
  app_links: ^6.4.1
  
  # Share
  share_plus: ^7.2.1
  
  # Package Info
  package_info_plus: ^4.2.0
  
  # Connectivity
  connectivity_plus: ^5.0.2
  
  # SVG Support
  flutter_svg: ^2.0.9

dev_dependencies:
  flutter_test:
    sdk: flutter

  # Linting
  flutter_lints: ^5.0.0
  
  # Code Generation
  build_runner: ^2.4.7
  riverpod_generator: ^2.3.9
  json_serializable: ^6.7.1
  freezed: ^2.4.6
  
  # Testing
  mockito: ^5.4.4
  integration_test:
    sdk: flutter

# For information on the generic Dart part of this file, see the
# following page: https://dart.dev/tools/pub/pubspec

# The following section is specific to Flutter packages.
flutter:

  # The following line ensures that the Material Icons font is
  # included with your application, so that you can use the icons in
  # the material Icons class.
  uses-material-design: true

  # To add assets to your application, add an assets section, like this:
  assets:
    - assets/images/

  # An image asset can refer to one or more resolution-specific "variants", see
  # https://flutter.dev/to/resolution-aware-images

  # For details regarding adding assets from package dependencies, see
  # https://flutter.dev/to/asset-from-package

  # To add custom fonts to your application, add a fonts section here,
  # in this "flutter" section. Each entry in this list should have a
  # "family" key with the font family name, and a "fonts" key with a
  # list giving the asset and other descriptors for the font. For
  # example:
  fonts:
    - family: Baloo
      fonts:
        - asset: fonts/Baloo-Regular.ttf
        - asset: fonts/Baloo-Medium.ttf
          weight: 500
        - asset: fonts/Baloo-SemiBold.ttf
          weight: 600
        - asset: fonts/Baloo-Bold.ttf
          weight: 700
    - family: Pretendard
      fonts:
        - asset: fonts/Pretendard-Thin.ttf
          weight: 100
        - asset: fonts/Pretendard-ExtraLight.ttf
          weight: 200
        - asset: fonts/Pretendard-Light.ttf
          weight: 300
        - asset: fonts/Pretendard-Regular.ttf
          weight: 400
        - asset: fonts/Pretendard-Medium.ttf
          weight: 500
        - asset: fonts/Pretendard-SemiBold.ttf
          weight: 600
        - asset: fonts/Pretendard-Bold.ttf
          weight: 700
        - asset: fonts/Pretendard-ExtraBold.ttf
          weight: 800
        - asset: fonts/Pretendard-Black.ttf
          weight: 900
  #
  # For details regarding fonts from package dependencies,
  # see https://flutter.dev/to/font-from-package
